!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(t){var r=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===e(r)?r:String(r)}var n=function(){function e(t,n){var o,i,c,u=this,l=t.data,a=t.handleCardClick,s=t.like,f=t.deleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=this,c=function(){var e=u._likes.find((function(e){return u._owner===e._id}));return void 0===e&&u._element.querySelector(".picture-card__like-btn").classList.remove("picture-card__like-btn_active"),e},(i=r(i="_hasOwnerLiked"))in o?Object.defineProperty(o,i,{value:c,enumerable:!0,configurable:!0,writable:!0}):o[i]=c,this._title=l.name,this._link=l.link,this._cardSelector=n,this._likes=l.likes,this._like=s,this._cardOwner=l.owner._id,this._owner="a0995efe3421bff16c16b482",this.handleCardClick=a,this._deleteCard=f}var n,o;return n=e,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".picture-card").cloneNode(!0)}},{key:"createCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".picture-card__image").src=this._link,this._element.querySelector(".picture-card__image").alt="".concat(this._title," image"),this._element.querySelector(".picture-card__description").textContent=this._title,this._element.querySelector(".picture-card__likes").textContent=this._likes.length,this._element}},{key:"_setEventListeners",value:function(){var e=this,t=this._element.querySelector(".picture-card__delete-btn");t.addEventListener("click",(function(){e._deleteCard()})),this._cardOwner===this._owner&&t.classList.remove("picture-card__delete-btn_hidden"),this._element.querySelector(".picture-card__like-btn").addEventListener("click",(function(t){e._like(t)})),this._element.querySelector(".picture-card__image").addEventListener("click",(function(){e.handleCardClick(e._title,e._link)}))}}])&&t(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,u(n.key),n)}}function c(e,t,r){return(t=u(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e){var t=function(e,t){if("object"!==o(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===o(t)?t:String(t)}var l=function(){function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_checkInputValidity",(function(e,t){t.validity.valid?n._hideInputError(t):n._showInputError(e,t,t.validationMessage)})),c(this,"_hasInvalidInput",(function(e){return e.some((function(e){return!e.validity.valid}))})),c(this,"_toggleButtonState",(function(e){n._hasInvalidInput(e)?n._buttonElement.classList.add(n._inactiveButtonClass):n._buttonElement.classList.remove(n._inactiveButtonClass)})),c(this,"_showInputError",(function(e,t,r){n._errorElement=e.querySelector(".".concat(t.id,"-error")),n._errorElement.classList.add(n._inputErrorClass),n._errorElement.textContent=r})),c(this,"_hideInputError",(function(){n._errorElement&&(n._errorElement.classList.remove(n._inputErrorClass),n._errorElement.textContent="")})),this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this.formSelect=r}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){var e=this;this._formElement=document.querySelector(this._formSelector);var t=Array.from(this._formElement.querySelectorAll(".modal__input-field"));t.forEach((function(r){r.addEventListener("input",(function(){e._checkInputValidity(e._formElement,r),e._toggleButtonState(t,e._submitButtonSelector)}))})),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(t,this._submitButtonSelector)}}])&&i(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),a=".pictures-container",s={formSelector:".form",inputSelector:".modal__input-field",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_inactive",inputErrorClass:"modal__input-error_active"};function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==f(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===f(o)?o:String(o)),n)}var o}var m=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderer",value:function(){var e=this;this._items.then((function(t){t.forEach((function(t){e._renderer(t)}))}))}}])&&p(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,b(n.key),n)}}function h(e,t,r){return(t=b(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function b(e){var t=function(e,t){if("object"!==y(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===y(t)?t:String(t)}var v=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),h(this,"close",(function(){r._formElement.remove(),document.removeEventListener("click",r.handleClickOutClose),window.removeEventListener("keydown",r._handleEscClose),r._formElement.querySelector(".modal__close-btn").removeEventListener("click",r.close)})),h(this,"_handleEscClose",(function(e){"Escape"===e.key&&r.close()})),h(this,"handleClickOutClose",(function(e){e.target.classList.contains("overlay")&&r.close()})),this.popupSelector=document.querySelector(t)}var t,r;return t=e,(r=[{key:"_getFormTemplate",value:function(){var e=document.querySelector(this.popupSelector).content;return this._formElement=e.querySelector(this.popupSelector.replace("#",".")).cloneNode(!0),this._formElement}},{key:"open",value:function(){return this._formElement=this._getFormTemplate(),this.setEventListeners(),this._formElement.classList.add("overlay"),this._formElement}},{key:"setEventListeners",value:function(){window.addEventListener("keydown",this._handleEscClose),document.addEventListener("click",this.handleClickOutClose),this._formElement.querySelector(".modal__close-btn").addEventListener("click",this.close)}}])&&d(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}function g(){return g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},g.apply(this,arguments)}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(n);if(o){var r=w(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),i.call(this)}return t=c,(r=[{key:"_getPopupTemplate",value:function(){var e=document.querySelector("#popup").content;return this._formElement=e.querySelector(".popup-container").cloneNode(!0),this._formElement}},{key:"open",value:function(e,t){return this._formElement=this._getPopupTemplate(),this._formElement.querySelector(".popup__image").src=t,this._formElement.querySelector(".popup__image").alt="".concat(e," image"),this._formElement.querySelector(".popup__title").textContent=e,this._formElement.classList.add("overlay"),document.querySelector(".pictures-container").append(this._formElement)}},{key:"close",value:function(){g(w(c.prototype),"close",this).call(this)}},{key:"setEventListeners",value:function(){g(w(c.prototype),"setEventListeners",this).call(this)}}])&&S(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(v);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function j(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==P(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===P(o)?o:String(o)),n)}var o}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},O.apply(this,arguments)}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(n);if(o){var r=q(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this)).popupSelector=e,r.handleFormSubmit=t,r}return t=c,(r=[{key:"_getFormTemplate",value:function(){var e=document.querySelector(this.popupSelector).content;return this._formElement=e.querySelector(this.popupSelector.replace("#",".")).cloneNode(!0),this._formElement}},{key:"open",value:function(){return O(q(c.prototype),"open",this).call(this),this._formElement=this._getFormTemplate(),this.setEventListeners(),this._formElement.classList.add("overlay"),this._formElement}},{key:"close",value:function(){O(q(c.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){return this._link=this._formElement.querySelector("#card-url").value,this._name=this._formElement.querySelector("#card-name").value,this._cardData={name:this._name,link:this._link},this._cardData}},{key:"_getInputUrl",value:function(){return this._avatar=this._formElement.querySelector("#profile-url-picture").value,this._avatar}},{key:"setEventListeners",value:function(){var e=this;O(q(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(t)}))}}])&&j(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(v);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function R(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,z(n.key),n)}}function x(e,t,r){return t&&R(e.prototype,t),r&&R(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function B(e,t,r){return(t=z(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function z(e){var t=function(e,t){if("object"!==L(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==L(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===L(t)?t:String(t)}var U=x((function e(t){var r=this,n=t.userName,o=t.userAbout;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),B(this,"getUserInfo",(function(){r._getProfileName=document.querySelector("#modal-profile").content.querySelector("#profile-name"),r._getProfileAbout=document.querySelector("#modal-profile").content.querySelector("#profile-description"),r._getProfileName.value=document.querySelector(".profile__name").textContent,r._getProfileAbout.value=document.querySelector(".profile__about-me").textContent})),B(this,"editProfile",(function(){return r._getProfileName=document.querySelector("#profile-name").value,r._getProfileAbout=document.querySelector("#profile-description").value,document.querySelector(".profile__name").textContent=r._getProfileName,document.querySelector(".profile__about-me").textContent=r._getProfileAbout,{name:r._getProfileName,about:r._getProfileAbout}})),this.userName=n,this.userAbout=o}));function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function N(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===I(o)?o:String(o)),n)}var o}var D=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers,this.authorization=t.headers.authorization}var t,r;return t=e,(r=[{key:"getUser",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:{authorization:this.authorization,"Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"getCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:{authorization:this.authorization,"Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"setProfile",value:function(e){var t=e.name,r=e.about;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this.authorization,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:r})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"postNewCard",value:function(e){var t=e.name,r=e.link;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:{authorization:this.authorization,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:r})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this.authorization,"Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"addLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this.authorization,"Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"removeLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this.authorization,"Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"setProfilePic",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this.authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}}])&&N(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://around.nomoreparties.co/v1/web_ptbr_cohort_03",headers:{authorization:"cd11ea9c-4334-427e-8070-b6b80559cc56","Content-Type":"application/json"}});function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function F(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==A(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===A(o)?o:String(o)),n)}var o}function V(){return V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},V.apply(this,arguments)}function J(e,t){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},J(e,t)}function H(e){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},H(e)}var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&J(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=H(n);if(o){var r=H(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function c(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this)).popupSelector=e,r.handleFormSubmit=t,r}return t=c,(r=[{key:"_getFormTemplate",value:function(){var e=document.querySelector(this.popupSelector).content;return this._formElement=e.querySelector(this.popupSelector.replace("#",".")).cloneNode(!0),this._formElement}},{key:"open",value:function(){return V(H(c.prototype),"open",this).call(this),this._formElement=this._getFormTemplate(),this.setEventListeners(),this._formElement.classList.add("overlay"),this._formElement}},{key:"close",value:function(){V(H(c.prototype),"close",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;V(H(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(t)}))}}])&&F(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(v);document.querySelector(".profile__add-card-button").addEventListener("click",(function(){K()})),document.querySelector(".profile__edit-button").addEventListener("click",(function(){W()})),document.querySelector(".profile__edit-picture").addEventListener("click",(function(){X()}));var G=new m({items:D.getCards().then((function(e){return e})),renderer:function(e){var t=new n({data:e,handleCardClick:function(e,t){var r=new k("#popup");r.open(e,t),r.setEventListeners()},like:function(t){Z(t,e)},deleteCard:function(){$(e,r)}},".card"),r=t.createCard();t._hasOwnerLiked(),G.addItem(r)}},a);G.renderer();var K=function(){var e=new T("#modal-card",(function(t){t.preventDefault(),t.submitter.innerText="Salvando...";var r=e._getInputValues(),o=new m({items:D.postNewCard({name:r.name,link:r.link}).then((function(e){return[e]})),renderer:function(e){var t=new n({data:e,handleCardClick:function(e,t){var r=new k("#popup");r.open(e,t),r.setEventListeners()},like:function(t){Z(t,e)},deleteCard:function(){$(e,r)}},".card"),r=t.createCard();document.querySelector(".pictures-container").prepend(r),t._hasOwnerLiked()}},a);o.renderer(),setTimeout((function(){document.querySelector(".general-modal").remove()}),100)}));Y(e),new l(s,"#modal-card").enableValidation()},Q=D.getUser(),W=function(){Y(new T("#modal-profile",(function(t){t.preventDefault(),t.submitter.innerText="Salvando...";var r=e.editProfile();D.setProfile({name:r.name,about:r.about}).then((function(){t.submitter.innerText="Salvo",setTimeout((function(){document.querySelector(".general-modal").remove()}),100)}))})));var e=new U({userName:Q,userAbout:Q});e.getUserInfo(),new l(s,"#modal-profile").enableValidation()},X=function(){var e=new T("#modal-profile-picture",(function(t){t.preventDefault();var r=e._getInputUrl();D.setProfilePic(r).then((function(e){document.querySelector(".profile__image").src=e.avatar,setTimeout((function(){document.querySelector(".general-modal").remove()}),100)}))}));Y(e),new l(s,"#modal-profile-picture").enableValidation()};function Y(e){if(null===document.querySelector(".form")){var t=document.querySelector(".pictures-container"),r=e.open();t.append(r)}}function Z(e,t){e.target.classList.contains("picture-card__like-btn_active")?(e.target.classList.remove("picture-card__like-btn_active"),e.target.nextElementSibling.textContent=--t.likes.length,D.removeLike(t._id)):(e.target.classList.add("picture-card__like-btn_active"),e.target.nextElementSibling.textContent=++t.likes.length,D.addLike(t._id))}function $(e,t){Y(new M("#modal-card-delete",(function(){D.deleteCard(e._id).then((function(){setTimeout((function(){document.querySelector(".general-modal").remove(),t.remove()}),100)}))})))}D.getUser().then((function(e){document.querySelector(".profile__name").textContent=e.name,document.querySelector(".profile__about-me").textContent=e.about,document.querySelector(".profile__image").src=e.avatar}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BRXBCZ0MsRUFBSXdELE9BQU9wRixVQUFVNEMsSUFBSSxpQ0FDekJoQixFQUFJd0QsT0FBT3dGLG1CQUFtQnJKLGNBQWdCcUQsRUFBS3BFLE1BQU1nQixPQUN6RHlGLEVBQUk2RCxRQUFRbEcsRUFBS2hGLEtBRXJCLENBSUEsU0FBU04sRUFBV3NGLEVBQU1zRSxHQVl4QlksRUFYMkIsSUFBSXRCLEVBQzdCLHNCQUNBLFdBQ0V2QixFQUFJM0gsV0FBV3NGLEVBQUtoRixLQUFLOEUsTUFBSyxXQUM1Qm1GLFlBQVcsV0FDVDlJLFNBQVNoQixjQUFjLGtCQUFrQkUsU0FDekNpSixFQUFZakosUUFDZCxHQUFHLElBQ0wsR0FDRixJQUdKLENBbERBZ0gsRUFBSWdELFVBQVV2RixNQUFLLFNBQUN2RixHQUNFNEIsU0FBU2hCLGNBQWMsa0JBQy9Cd0IsWUFBY3BDLEVBQUtpQixLQUVWVyxTQUFTaEIsY0FBYyxzQkFDL0J3QixZQUFjcEMsRUFBSzZILE1BRVRqRyxTQUFTaEIsY0FBYyxtQkFDL0JxQixJQUFNakMsRUFBS29KLE1BQzVCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNF9wdGJyLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzRfcHRici8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80X3B0YnIvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKHsgZGF0YSwgaGFuZGxlQ2FyZENsaWNrLCBsaWtlLCBkZWxldGVDYXJkIH0sIGNhcmRTZWxlY3Rvcikge1xuICAgIHRoaXMuX3RpdGxlID0gZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgIHRoaXMuX2xpa2VzID0gZGF0YS5saWtlcztcbiAgICB0aGlzLl9saWtlID0gbGlrZTtcbiAgICB0aGlzLl9jYXJkT3duZXIgPSBkYXRhLm93bmVyLl9pZDtcbiAgICB0aGlzLl9vd25lciA9IFwiYTA5OTVlZmUzNDIxYmZmMTZjMTZiNDgyXCI7XG4gICAgdGhpcy5oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgdGhpcy5fZGVsZXRlQ2FyZCA9IGRlbGV0ZUNhcmQ7XG4gIH1cblxuICAvKiAgUmVjb2xoZSBlIGNsb25hIG8gdGVtcGxhdGUgZG8gY2FyZCovXG5cbiAgX2dldFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGljdHVyZS1jYXJkXCIpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50O1xuICB9XG5cbiAgLyogIEF0cmlidWkgb3MgdmFsb3JlcyBwYXJhIGF0cmlidXRvcyBkbyBlbGVtZW50byBlIGNyaWEgbyBjYXJkICovXG5cbiAgY3JlYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcblxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGljdHVyZS1jYXJkX19pbWFnZVwiKS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwiLnBpY3R1cmUtY2FyZF9faW1hZ2VcIlxuICAgICkuYWx0ID0gYCR7dGhpcy5fdGl0bGV9IGltYWdlYDtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGljdHVyZS1jYXJkX19kZXNjcmlwdGlvblwiKS50ZXh0Q29udGVudCA9XG4gICAgICB0aGlzLl90aXRsZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGljdHVyZS1jYXJkX19saWtlc1wiKS50ZXh0Q29udGVudCA9XG4gICAgICB0aGlzLl9saWtlcy5sZW5ndGg7XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIC8qICBBZGljaW9uYSBvcyBFdmVudExpc3RlbmVycyBub3MgY2FyZHMgICovXG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIGNvbnN0IGRlbGV0ZUJ0biA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5waWN0dXJlLWNhcmRfX2RlbGV0ZS1idG5cIik7XG4gICAgZGVsZXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICB0aGlzLl9kZWxldGVDYXJkKCk7XG4gICAgfSk7XG5cbiAgICBpZiAodGhpcy5fY2FyZE93bmVyID09PSB0aGlzLl9vd25lcikge1xuICAgICAgZGVsZXRlQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJwaWN0dXJlLWNhcmRfX2RlbGV0ZS1idG5faGlkZGVuXCIpO1xuICAgIH1cblxuICAgIGNvbnN0IGxpa2VCdG4gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucGljdHVyZS1jYXJkX19saWtlLWJ0blwiKTtcblxuICAgIGxpa2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgICAgIHRoaXMuX2xpa2UoZXZ0KTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGNhcmRJbWFnZSA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5waWN0dXJlLWNhcmRfX2ltYWdlXCIpO1xuICAgIGNhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVDYXJkQ2xpY2sodGhpcy5fdGl0bGUsIHRoaXMuX2xpbmspO1xuICAgIH0pO1xuICB9XG5cbiAgX2hhc093bmVyTGlrZWQgPSAoKSA9PiB7XG4gICAgY29uc3QgaXNMaWtlZCA9IHRoaXMuX2xpa2VzLmZpbmQoKGlzTGlrZWQpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl9vd25lciA9PT0gaXNMaWtlZC5faWQ7XG4gICAgfSk7XG5cbiAgICBpZiAoaXNMaWtlZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBsaWtlQnRuID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBpY3R1cmUtY2FyZF9fbGlrZS1idG5cIik7XG4gICAgICBsaWtlQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJwaWN0dXJlLWNhcmRfX2xpa2UtYnRuX2FjdGl2ZVwiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaXNMaWtlZDtcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihjb25maWdPYmosIGZvcm1TZWxlY3QpIHtcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBjb25maWdPYmouZm9ybVNlbGVjdG9yOyAvKiBcIi5mb3JtXCIgKi9cbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnT2JqLmlucHV0U2VsZWN0b3I7IC8qIFwiLm1vZGFsX19pbnB1dC1maWVsZFwiICovXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPVxuICAgICAgY29uZmlnT2JqLnN1Ym1pdEJ1dHRvblNlbGVjdG9yOyAvKiBcIi5tb2RhbF9fc3VibWl0LWJ0biBcIiovXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9XG4gICAgICBjb25maWdPYmouaW5hY3RpdmVCdXR0b25DbGFzczsgLyogXCIubW9kYWxfX3N1Ym1pdC1idG5faW5hY3RpdmVcIiAgKi9cbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPVxuICAgICAgY29uZmlnT2JqLmlucHV0RXJyb3JDbGFzczsgLyogXCIubW9kYWxfX2lucHV0LWVycm9yX2FjdGl2ZVwiICovXG5cbiAgICB0aGlzLmZvcm1TZWxlY3QgPSBmb3JtU2VsZWN0O1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fZm9ybVNlbGVjdG9yKTtcblxuICAgIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19pbnB1dC1maWVsZFwiKVxuICAgICk7XG5cbiAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KHRoaXMuX2Zvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQpO1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvclxuICAgICk7XG5cbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZShpbnB1dExpc3QsIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgfVxuICAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gIFZhbGlkYcOnw7VlcyAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiAgLyogIEFwcmVzZW50YSBvdSBlc2NvbmRlIG9zIGVsZW1lbnRvcyBkZSBlcnJvIGNhc28gbyBpbnB1dCBmb3IgaW52w6FsaWRvICovXG5cbiAgX2NoZWNrSW5wdXRWYWxpZGl0eSA9IChfZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCkgPT4ge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihcbiAgICAgICAgX2Zvcm1FbGVtZW50LFxuICAgICAgICBpbnB1dEVsZW1lbnQsXG4gICAgICAgIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZVxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICB9XG4gIH07XG5cbiAgLyogIFZhbGlkYSBzZSBvcyBjYW1wb3MgcG9zc3VlbSB1bSBpbnB1dCBpbnbDoWxpZG8gKi9cblxuICBfaGFzSW52YWxpZElucHV0ID0gKGlucHV0TGlzdCkgPT4ge1xuICAgIHJldHVybiBpbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiAhaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKTtcbiAgfTtcblxuICAvKiAgQWx0ZXJhIG8gZXN0YWRvIGRvIGJvdMOjbyBkZSBzdWJtaXQgZGVwZW5kZW5kbyBkbyByZXRvcm5vIGRhIHZhbGlkYcOnw6NvICovXG5cbiAgX3RvZ2dsZUJ1dHRvblN0YXRlID0gKGlucHV0TGlzdCkgPT4ge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoaW5wdXRMaXN0KSkge1xuICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgfVxuICB9O1xuXG4gIC8qICBBcHJlc2VudGEgbyBlbGVtZW50byBkZSBlcnJvIGRvcyBpbnB1dHMgcmV0b3JuYWRvIHBlbGEgdmFsaWRhw6fDo28gICovXG5cbiAgX3Nob3dJbnB1dEVycm9yID0gKF9mb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpID0+IHtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSBfZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYFxuICAgICk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gIH07XG5cbiAgLyogIEVzY29uZGUgbyBlbGVtZW50byBkZSBlcnJvIGRvcyBpbnB1dHMgcmV0b3JuYWRvIHBlbGEgdmFsaWRhw6fDo28gICovXG5cbiAgX2hpZGVJbnB1dEVycm9yID0gKCkgPT4ge1xuICAgIGlmICh0aGlzLl9lcnJvckVsZW1lbnQpIHtcbiAgICAgIHRoaXMuX2Vycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgIH1cbiAgfTtcbn1cbiIsImV4cG9ydCB7IGNvbmZpZ09iaiB9O1xuXG5leHBvcnQgY29uc3QgY2FyZENvbnRhaW5lciA9IFwiLnBpY3R1cmVzLWNvbnRhaW5lclwiO1xuXG5jb25zdCBjb25maWdPYmogPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIuZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXQtZmllbGRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19zdWJtaXQtYnRuXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX3N1Ym1pdC1idG5faW5hY3RpdmVcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dC1lcnJvcl9hY3RpdmVcIixcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY2xhc3NTZWxlY3Rvcikge1xuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNsYXNzU2VsZWN0b3IpO1xuICB9XG5cbiAgYWRkSXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChlbGVtZW50KTtcbiAgfVxuXG4gIHJlbmRlcmVyKCkge1xuICAgIHRoaXMuX2l0ZW1zLnRoZW4oKHJlcykgPT4ge1xuICAgICAgcmVzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgdGhpcy5wb3B1cFNlbGVjdG9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgfVxuXG4gIF9nZXRGb3JtVGVtcGxhdGUoKSB7XG4gICAgY29uc3QgZm9ybVRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLnBvcHVwU2VsZWN0b3IpLmNvbnRlbnQ7XG5cbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1UZW1wbGF0ZVxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5wb3B1cFNlbGVjdG9yLnJlcGxhY2UoXCIjXCIsIFwiLlwiKSlcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICByZXR1cm4gdGhpcy5fZm9ybUVsZW1lbnQ7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fZ2V0Rm9ybVRlbXBsYXRlKCk7XG4gICAgdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJvdmVybGF5XCIpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1FbGVtZW50O1xuICB9XG5cbiAgY2xvc2UgPSAoKSA9PiB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQucmVtb3ZlKCk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaGFuZGxlQ2xpY2tPdXRDbG9zZSk7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgICBjb25zdCBjbG9zZUJ0biA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlLWJ0blwiKTtcbiAgICBjbG9zZUJ0bi5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5jbG9zZSk7XG4gIH07XG5cbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9O1xuXG4gIGhhbmRsZUNsaWNrT3V0Q2xvc2UgPSAoZXZ0KSA9PiB7XG4gICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3ZlcmxheVwiKSkge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH1cbiAgfTtcblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhhbmRsZUNsaWNrT3V0Q2xvc2UpO1xuICAgIGNvbnN0IGNsb3NlQnRuID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2UtYnRuXCIpO1xuICAgIGNsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmNsb3NlKTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgLyogIFJlY29saGUgZSBjbG9uYSBvIHRlbXBsYXRlIGRvIHBvcHVwICovXG4gIF9nZXRQb3B1cFRlbXBsYXRlKCkge1xuICAgIGNvbnN0IHBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwb3B1cFwiKS5jb250ZW50O1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cC1jb250YWluZXJcIikuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1FbGVtZW50O1xuICB9XG5cbiAgLyogIEF0cmlidWkgb3MgdmFsb3JlcyBwYXJhIGFzIG1hcmNhw6fDtWVzIGRvIHBvcHVwIGUgYWRpY2lvbmEgYW8gRE9NICovXG4gIG9wZW4obmFtZSwgbGluaykge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gdGhpcy5fZ2V0UG9wdXBUZW1wbGF0ZSgpO1xuXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIikuc3JjID0gbGluaztcbiAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZVwiKS5hbHQgPSBgJHtuYW1lfSBpbWFnZWA7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fdGl0bGVcIikudGV4dENvbnRlbnQgPSBuYW1lO1xuXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm92ZXJsYXlcIik7XG5cbiAgICBjb25zdCBjYXJkQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5waWN0dXJlcy1jb250YWluZXJcIik7XG5cbiAgICByZXR1cm4gY2FyZENvbnRhaW5lci5hcHBlbmQodGhpcy5fZm9ybUVsZW1lbnQpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnBvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xuICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gIH1cblxuICBfZ2V0Rm9ybVRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGZvcm1UZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5wb3B1cFNlbGVjdG9yKS5jb250ZW50O1xuXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtVGVtcGxhdGVcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMucG9wdXBTZWxlY3Rvci5yZXBsYWNlKFwiI1wiLCBcIi5cIikpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1FbGVtZW50O1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICBzdXBlci5vcGVuKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSB0aGlzLl9nZXRGb3JtVGVtcGxhdGUoKTtcbiAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm92ZXJsYXlcIik7XG5cbiAgICByZXR1cm4gdGhpcy5fZm9ybUVsZW1lbnQ7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICB9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2xpbmsgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtdXJsXCIpLnZhbHVlO1xuICAgIHRoaXMuX25hbWUgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtbmFtZVwiKS52YWx1ZTtcblxuICAgIHRoaXMuX2NhcmREYXRhID0ge1xuICAgICAgbmFtZTogdGhpcy5fbmFtZSxcbiAgICAgIGxpbms6IHRoaXMuX2xpbmssXG4gICAgfTtcblxuICAgIHJldHVybiB0aGlzLl9jYXJkRGF0YTtcbiAgfVxuXG4gIF9nZXRJbnB1dFVybCgpIHtcbiAgICB0aGlzLl9hdmF0YXIgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgXCIjcHJvZmlsZS11cmwtcGljdHVyZVwiXG4gICAgKS52YWx1ZTtcblxuICAgIHJldHVybiB0aGlzLl9hdmF0YXI7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdChldnQpO1xuICAgIH0pO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gIGNvbnN0cnVjdG9yKHsgdXNlck5hbWUsIHVzZXJBYm91dCB9KSB7XG4gICAgdGhpcy51c2VyTmFtZSA9IHVzZXJOYW1lO1xuICAgIHRoaXMudXNlckFib3V0ID0gdXNlckFib3V0O1xuICB9XG5cbiAgLyogQ29sZXRhIG9zIGRhZG9zIGRvIHBlcmZpbCAqL1xuXG4gIGdldFVzZXJJbmZvID0gKCkgPT4ge1xuICAgIHRoaXMuX2dldFByb2ZpbGVOYW1lID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsLXByb2ZpbGVcIilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1uYW1lXCIpO1xuXG4gICAgdGhpcy5fZ2V0UHJvZmlsZUFib3V0ID0gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsLXByb2ZpbGVcIilcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1kZXNjcmlwdGlvblwiKTtcblxuICAgIHRoaXMuX2dldFByb2ZpbGVOYW1lLnZhbHVlID1cbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKS50ZXh0Q29udGVudDtcbiAgICB0aGlzLl9nZXRQcm9maWxlQWJvdXQudmFsdWUgPVxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hYm91dC1tZVwiKS50ZXh0Q29udGVudDtcbiAgfTtcblxuICAvKiBFZGl0YSBvcyBkYWRvcyBkbyBwZXJmaWwgKi9cblxuICBlZGl0UHJvZmlsZSA9ICgpID0+IHtcbiAgICB0aGlzLl9nZXRQcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1uYW1lXCIpLnZhbHVlO1xuICAgIHRoaXMuX2dldFByb2ZpbGVBYm91dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcIiNwcm9maWxlLWRlc2NyaXB0aW9uXCJcbiAgICApLnZhbHVlO1xuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpLnRleHRDb250ZW50ID0gdGhpcy5fZ2V0UHJvZmlsZU5hbWU7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hYm91dC1tZVwiKS50ZXh0Q29udGVudCA9XG4gICAgICB0aGlzLl9nZXRQcm9maWxlQWJvdXQ7XG5cbiAgICBjb25zdCB1c2VyRGF0YSA9IHtcbiAgICAgIG5hbWU6IHRoaXMuX2dldFByb2ZpbGVOYW1lLFxuICAgICAgYWJvdXQ6IHRoaXMuX2dldFByb2ZpbGVBYm91dCxcbiAgICB9O1xuXG4gICAgcmV0dXJuIHVzZXJEYXRhO1xuICB9O1xufVxuIiwiZXhwb3J0IHsgYXBpIH07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICAodGhpcy5iYXNlVXJsID0gb3B0aW9ucy5iYXNlVXJsKSxcbiAgICAgICh0aGlzLmhlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnMpLFxuICAgICAgKHRoaXMuYXV0aG9yaXphdGlvbiA9IG9wdGlvbnMuaGVhZGVycy5hdXRob3JpemF0aW9uKTtcbiAgfVxuXG4gIGdldFVzZXIoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuYXV0aG9yaXphdGlvbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgZ2V0Q2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuYXV0aG9yaXphdGlvbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgc2V0UHJvZmlsZSh7IG5hbWUsIGFib3V0IH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmF1dGhvcml6YXRpb24sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgYWJvdXQ6IGFib3V0LFxuICAgICAgfSksXG4gICAgfSlcbiAgICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSk7XG4gIH1cblxuICBwb3N0TmV3Q2FyZCh7IG5hbWUsIGxpbmsgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5hdXRob3JpemF0aW9uLFxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgIGxpbms6IGxpbmssXG4gICAgICB9KSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmF1dGhvcml6YXRpb24sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KTtcbiAgfVxuXG4gIGFkZExpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIlBVVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmF1dGhvcml6YXRpb24sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KTtcbiAgfVxuXG4gIHJlbW92ZUxpa2UoY2FyZElkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmF1dGhvcml6YXRpb24sXG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgfSxcbiAgICB9KVxuICAgICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgfSlcbiAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KTtcbiAgfVxuXG4gIHNldFByb2ZpbGVQaWMoYXZhdGFyKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuYXV0aG9yaXphdGlvbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBhdmF0YXI6IGF2YXRhcixcbiAgICAgIH0pLFxuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgICB9KVxuICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pO1xuICB9XG59XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViX3B0YnJfY29ob3J0XzAzXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcImNkMTFlYTljLTQzMzQtNDI3ZS04MDcwLWI2YjgwNTU5Y2M1NlwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLnBvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xuICAgIHRoaXMuaGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gIH1cblxuICBfZ2V0Rm9ybVRlbXBsYXRlKCkge1xuICAgIGNvbnN0IGZvcm1UZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5wb3B1cFNlbGVjdG9yKS5jb250ZW50O1xuXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtVGVtcGxhdGVcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMucG9wdXBTZWxlY3Rvci5yZXBsYWNlKFwiI1wiLCBcIi5cIikpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1FbGVtZW50O1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICBzdXBlci5vcGVuKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSB0aGlzLl9nZXRGb3JtVGVtcGxhdGUoKTtcbiAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm92ZXJsYXlcIik7XG5cbiAgICByZXR1cm4gdGhpcy5fZm9ybUVsZW1lbnQ7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLmhhbmRsZUZvcm1TdWJtaXQoZXZ0KTtcbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFwiLi9wYWdlL2luZGV4LmNzc1wiO1xuaW1wb3J0IENhcmQgZnJvbSBcIi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcbmltcG9ydCB7IGNvbmZpZ09iaiB9IGZyb20gXCIuL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgeyBjYXJkQ29udGFpbmVyIH0gZnJvbSBcIi4vdXRpbHMvY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xuaW1wb3J0IHsgYXBpIH0gZnJvbSBcIi4vY29tcG9uZW50cy9BcGkuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtYXRpb24gZnJvbSBcIi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb25cIjtcblxuLyogIEFkaWNpb25hbmRvIEV2ZW50TGlzdGVuZXJzIGFvcyBib3TDtWVzIGRlIGFkaWNpb25hciBlIGVkaXRhciBwZXJmaWwgICovXG5cbihmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IGFkZENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1jYXJkLWJ1dHRvblwiKTtcbiAgYWRkQ2FyZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIHJlbmRlckNhcmRGb3JtKCk7XG4gIH0pO1xuXG4gIGNvbnN0IGVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTtcbiAgZWRpdFByb2ZpbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICByZW5kZXJQcm9maWxlRm9ybSgpO1xuICB9KTtcblxuICBjb25zdCBlZGl0UHJvZmlsZVBpYyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZWRpdC1waWN0dXJlXCIpO1xuICBlZGl0UHJvZmlsZVBpYy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIHJlbmRlclBpY3R1cmVGb3JtKCk7XG4gIH0pO1xufSkoKTtcblxuLyogIFJlY2ViZW5kbyBjYXJkcyBleGlzdGVudGVzIGRhIEFQSSBhbyBET00gKi9cblxuY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbihcbiAge1xuICAgIGl0ZW1zOiBhcGkuZ2V0Q2FyZHMoKS50aGVuKChkYXRhKSA9PiB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9KSxcbiAgICByZW5kZXJlcjogKGl0ZW0pID0+IHtcbiAgICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcbiAgICAgICAge1xuICAgICAgICAgIGRhdGE6IGl0ZW0sXG4gICAgICAgICAgaGFuZGxlQ2FyZENsaWNrOiAobmFtZSwgbGluaykgPT4ge1xuICAgICAgICAgICAgY29uc3QgcG9wdXBJbWcgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjcG9wdXBcIik7XG4gICAgICAgICAgICBwb3B1cEltZy5vcGVuKG5hbWUsIGxpbmspO1xuICAgICAgICAgICAgcG9wdXBJbWcuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxpa2U6IChldnQpID0+IHtcbiAgICAgICAgICAgIHNldExpa2UoZXZ0LCBpdGVtKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIGRlbGV0ZUNhcmQ6ICgpID0+IHtcbiAgICAgICAgICAgIGRlbGV0ZUNhcmQoaXRlbSwgY2FyZEVsZW1lbnQpO1xuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIFwiLmNhcmRcIlxuICAgICAgKTtcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5jcmVhdGVDYXJkKCk7XG4gICAgICBjYXJkLl9oYXNPd25lckxpa2VkKCk7XG4gICAgICBjYXJkTGlzdC5hZGRJdGVtKGNhcmRFbGVtZW50KTtcbiAgICB9LFxuICB9LFxuICBjYXJkQ29udGFpbmVyXG4pO1xuXG5jYXJkTGlzdC5yZW5kZXJlcigpO1xuXG4vKiAgQWJyaW5kbyBmb3JtdWzDoXJpbyBkZSBjYXJkICovXG5cbmV4cG9ydCBjb25zdCByZW5kZXJDYXJkRm9ybSA9ICgpID0+IHtcbiAgY29uc3QgbmV3Rm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI21vZGFsLWNhcmRcIiwgKGV2dCkgPT4ge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGV2dC5zdWJtaXR0ZXIuaW5uZXJUZXh0ID0gXCJTYWx2YW5kby4uLlwiO1xuICAgIGNvbnN0IGNhcmREYXRhID0gbmV3Rm9ybS5fZ2V0SW5wdXRWYWx1ZXMoKTtcblxuICAgIGNvbnN0IG5ld0NhcmQgPSBuZXcgU2VjdGlvbihcbiAgICAgIHtcbiAgICAgICAgaXRlbXM6IGFwaVxuICAgICAgICAgIC5wb3N0TmV3Q2FyZCh7XG4gICAgICAgICAgICBuYW1lOiBjYXJkRGF0YS5uYW1lLFxuICAgICAgICAgICAgbGluazogY2FyZERhdGEubGluayxcbiAgICAgICAgICB9KVxuICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gW2RhdGFdO1xuICAgICAgICAgIH0pLFxuICAgICAgICByZW5kZXJlcjogKGl0ZW0pID0+IHtcbiAgICAgICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGRhdGE6IGl0ZW0sXG4gICAgICAgICAgICAgIGhhbmRsZUNhcmRDbGljazogKG5hbWUsIGxpbmspID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBwb3B1cEltZyA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIiNwb3B1cFwiKTtcbiAgICAgICAgICAgICAgICBwb3B1cEltZy5vcGVuKG5hbWUsIGxpbmspO1xuICAgICAgICAgICAgICAgIHBvcHVwSW1nLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGxpa2U6IChldnQpID0+IHtcbiAgICAgICAgICAgICAgICBzZXRMaWtlKGV2dCwgaXRlbSk7XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGRlbGV0ZUNhcmQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBkZWxldGVDYXJkKGl0ZW0sIGNhcmRFbGVtZW50KTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIi5jYXJkXCJcbiAgICAgICAgICApO1xuICAgICAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5jcmVhdGVDYXJkKCk7XG4gICAgICAgICAgY29uc3QgY2FyZENvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBpY3R1cmVzLWNvbnRhaW5lclwiKTtcbiAgICAgICAgICBjYXJkQ29udGVudC5wcmVwZW5kKGNhcmRFbGVtZW50KTtcblxuICAgICAgICAgIGNhcmQuX2hhc093bmVyTGlrZWQoKTtcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICBjYXJkQ29udGFpbmVyXG4gICAgKTtcbiAgICBuZXdDYXJkLnJlbmRlcmVyKCk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdlbmVyYWwtbW9kYWxcIikucmVtb3ZlKCk7XG4gICAgfSwgMTAwKTtcbiAgfSk7XG5cbiAgaXNTaW5nbGVGb3JtKG5ld0Zvcm0pO1xuICBuZXcgRm9ybVZhbGlkYXRvcihjb25maWdPYmosIFwiI21vZGFsLWNhcmRcIikuZW5hYmxlVmFsaWRhdGlvbigpO1xufTtcblxuLyogIEFicmluZG8gZm9ybXVsw6FyaW8gZGUgcGVyZmlsICovXG5jb25zdCB1c2VyID0gYXBpLmdldFVzZXIoKTtcbmV4cG9ydCBjb25zdCByZW5kZXJQcm9maWxlRm9ybSA9ICgpID0+IHtcbiAgY29uc3QgbmV3Rm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI21vZGFsLXByb2ZpbGVcIiwgKGV2dCkgPT4ge1xuICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGV2dC5zdWJtaXR0ZXIuaW5uZXJUZXh0ID0gXCJTYWx2YW5kby4uLlwiO1xuICAgIGNvbnN0IHVzZXJEYXRhID0gdXNlckluZm8uZWRpdFByb2ZpbGUoKTtcbiAgICBhcGkuc2V0UHJvZmlsZSh7IG5hbWU6IHVzZXJEYXRhLm5hbWUsIGFib3V0OiB1c2VyRGF0YS5hYm91dCB9KS50aGVuKCgpID0+IHtcbiAgICAgIGV2dC5zdWJtaXR0ZXIuaW5uZXJUZXh0ID0gXCJTYWx2b1wiO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZ2VuZXJhbC1tb2RhbFwiKS5yZW1vdmUoKTtcbiAgICAgIH0sIDEwMCk7XG4gICAgfSk7XG4gIH0pO1xuICBpc1NpbmdsZUZvcm0obmV3Rm9ybSk7XG5cbiAgY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xuICAgIHVzZXJOYW1lOiB1c2VyLFxuICAgIHVzZXJBYm91dDogdXNlcixcbiAgfSk7XG5cbiAgdXNlckluZm8uZ2V0VXNlckluZm8oKTtcblxuICBuZXcgRm9ybVZhbGlkYXRvcihjb25maWdPYmosIFwiI21vZGFsLXByb2ZpbGVcIikuZW5hYmxlVmFsaWRhdGlvbigpO1xufTtcblxuLyogQWx0ZXJhbmRvIGZvdG8gZGUgcGVyZmlsICovXG5cbmNvbnN0IHJlbmRlclBpY3R1cmVGb3JtID0gKCkgPT4ge1xuICBjb25zdCBuZXdGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIjbW9kYWwtcHJvZmlsZS1waWN0dXJlXCIsIChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCB1cmwgPSBuZXdGb3JtLl9nZXRJbnB1dFVybCgpO1xuXG4gICAgYXBpLnNldFByb2ZpbGVQaWModXJsKS50aGVuKChyZXMpID0+IHtcbiAgICAgIGNvbnN0IHByb2ZpbGVQaWN0dXJlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19pbWFnZVwiKTtcbiAgICAgIHByb2ZpbGVQaWN0dXJlLnNyYyA9IHJlcy5hdmF0YXI7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5nZW5lcmFsLW1vZGFsXCIpLnJlbW92ZSgpO1xuICAgICAgfSwgMTAwKTtcbiAgICB9KTtcbiAgfSk7XG4gIGlzU2luZ2xlRm9ybShuZXdGb3JtKTtcbiAgbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnT2JqLCBcIiNtb2RhbC1wcm9maWxlLXBpY3R1cmVcIikuZW5hYmxlVmFsaWRhdGlvbigpO1xufTtcblxuLyogUmVjZWJlbmRvIGRhZG9zIGRlIHVzdcOhcmlvIGF0dWFsaXphZG9zIGFvIGluaWNpYXIgICovXG5cbmFwaS5nZXRVc2VyKCkudGhlbigoZGF0YSkgPT4ge1xuICBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcbiAgcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG5cbiAgY29uc3QgcHJvZmlsZUFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hYm91dC1tZVwiKTtcbiAgcHJvZmlsZUFib3V0LnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcblxuICBjb25zdCBwcm9maWxlUGljdHVyZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW1hZ2VcIik7XG4gIHByb2ZpbGVQaWN0dXJlLnNyYyA9IGRhdGEuYXZhdGFyO1xufSk7XG5cbi8qIFZhbGlkYSBzZSBleGlzdGUgb3V0cm8gZm9ybXVsw6FyaW8gYWJlcnRvIGFudGVzIGRlIGFkaWNpb25hciB1bSBub3ZvICovXG5cbmZ1bmN0aW9uIGlzU2luZ2xlRm9ybShuZXdGb3JtKSB7XG4gIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIikgPT09IG51bGwpIHtcbiAgICBjb25zdCBtYWluQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5waWN0dXJlcy1jb250YWluZXJcIik7XG4gICAgY29uc3QgbmV3Rm9ybUVsZW1lbnQgPSBuZXdGb3JtLm9wZW4oKTtcbiAgICBtYWluQ29udGFpbmVyLmFwcGVuZChuZXdGb3JtRWxlbWVudCk7XG4gIH1cbn1cblxuLyogQWx0ZXJhIG9zIGVzdGFkb3MgZGUgbGlrZSAqL1xuXG5mdW5jdGlvbiBzZXRMaWtlKGV2dCwgaXRlbSkge1xuICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwaWN0dXJlLWNhcmRfX2xpa2UtYnRuX2FjdGl2ZVwiKSkge1xuICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZShcInBpY3R1cmUtY2FyZF9fbGlrZS1idG5fYWN0aXZlXCIpO1xuICAgIGV2dC50YXJnZXQubmV4dEVsZW1lbnRTaWJsaW5nLnRleHRDb250ZW50ID0gLS1pdGVtLmxpa2VzLmxlbmd0aDtcbiAgICBhcGkucmVtb3ZlTGlrZShpdGVtLl9pZCk7XG4gIH0gZWxzZSB7XG4gICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuYWRkKFwicGljdHVyZS1jYXJkX19saWtlLWJ0bl9hY3RpdmVcIik7XG4gICAgZXZ0LnRhcmdldC5uZXh0RWxlbWVudFNpYmxpbmcudGV4dENvbnRlbnQgPSArK2l0ZW0ubGlrZXMubGVuZ3RoO1xuICAgIGFwaS5hZGRMaWtlKGl0ZW0uX2lkKTtcbiAgfVxufVxuXG4vKiBEZWxldGEgb3MgY2FyZHMgKi9cblxuZnVuY3Rpb24gZGVsZXRlQ2FyZChpdGVtLCBjYXJkRWxlbWVudCkge1xuICBjb25zdCBkZWxldGVDb25maXJtYXRpb24gPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKFxuICAgIFwiI21vZGFsLWNhcmQtZGVsZXRlXCIsXG4gICAgKCkgPT4ge1xuICAgICAgYXBpLmRlbGV0ZUNhcmQoaXRlbS5faWQpLnRoZW4oKCkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdlbmVyYWwtbW9kYWxcIikucmVtb3ZlKCk7XG4gICAgICAgICAgY2FyZEVsZW1lbnQucmVtb3ZlKCk7XG4gICAgICAgIH0sIDEwMCk7XG4gICAgICB9KTtcbiAgICB9XG4gICk7XG4gIGlzU2luZ2xlRm9ybShkZWxldGVDb25maXJtYXRpb24pO1xufVxuIl0sIm5hbWVzIjpbIkNhcmQiLCJfcmVmIiwiY2FyZFNlbGVjdG9yIiwiX3RoaXMiLCJkYXRhIiwiaGFuZGxlQ2FyZENsaWNrIiwibGlrZSIsImRlbGV0ZUNhcmQiLCJfY2xhc3NDYWxsQ2hlY2siLCJpc0xpa2VkIiwiX2xpa2VzIiwiZmluZCIsIl9vd25lciIsIl9pZCIsInVuZGVmaW5lZCIsIl9lbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImNsYXNzTGlzdCIsInJlbW92ZSIsInRoaXMiLCJfdGl0bGUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX2NhcmRTZWxlY3RvciIsImxpa2VzIiwiX2xpa2UiLCJfY2FyZE93bmVyIiwib3duZXIiLCJfZGVsZXRlQ2FyZCIsImtleSIsInZhbHVlIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2dldFRlbXBsYXRlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwic3JjIiwiYWx0IiwiY29uY2F0IiwidGV4dENvbnRlbnQiLCJsZW5ndGgiLCJfdGhpczIiLCJkZWxldGVCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwiRm9ybVZhbGlkYXRvciIsImNvbmZpZ09iaiIsImZvcm1TZWxlY3QiLCJfZGVmaW5lUHJvcGVydHkiLCJfZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJ2YWxpZGl0eSIsInZhbGlkIiwiX2hpZGVJbnB1dEVycm9yIiwiX3Nob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJpbnB1dExpc3QiLCJzb21lIiwiX2hhc0ludmFsaWRJbnB1dCIsIl9idXR0b25FbGVtZW50IiwiYWRkIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJlcnJvck1lc3NhZ2UiLCJfZXJyb3JFbGVtZW50IiwiaWQiLCJfaW5wdXRFcnJvckNsYXNzIiwiX2Zvcm1TZWxlY3RvciIsImZvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImNhcmRDb250YWluZXIiLCJTZWN0aW9uIiwiY2xhc3NTZWxlY3RvciIsIml0ZW1zIiwicmVuZGVyZXIiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZWxlbWVudCIsImFwcGVuZCIsInRoZW4iLCJyZXMiLCJpdGVtIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImhhbmRsZUNsaWNrT3V0Q2xvc2UiLCJ3aW5kb3ciLCJfaGFuZGxlRXNjQ2xvc2UiLCJjbG9zZSIsInRhcmdldCIsImNvbnRhaW5zIiwiZm9ybVRlbXBsYXRlIiwicmVwbGFjZSIsIl9nZXRGb3JtVGVtcGxhdGUiLCJzZXRFdmVudExpc3RlbmVycyIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwiX2luaGVyaXRzIiwiX3N1cGVyIiwiY2FsbCIsInBvcHVwIiwiX2dldFBvcHVwVGVtcGxhdGUiLCJfZ2V0IiwiX2dldFByb3RvdHlwZU9mIiwicHJvdG90eXBlIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfbmFtZSIsIl9jYXJkRGF0YSIsIl9hdmF0YXIiLCJwcmV2ZW50RGVmYXVsdCIsIlVzZXJJbmZvIiwiX2NyZWF0ZUNsYXNzIiwidXNlck5hbWUiLCJ1c2VyQWJvdXQiLCJfZ2V0UHJvZmlsZU5hbWUiLCJfZ2V0UHJvZmlsZUFib3V0IiwiYWJvdXQiLCJhcGkiLCJBcGkiLCJvcHRpb25zIiwiYmFzZVVybCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwiZmV0Y2giLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJfcmVmMiIsImNhcmRJZCIsImF2YXRhciIsIlBvcHVwV2l0aENvbmZpcm1hdGlvbiIsInJlbmRlckNhcmRGb3JtIiwicmVuZGVyUHJvZmlsZUZvcm0iLCJyZW5kZXJQaWN0dXJlRm9ybSIsImNhcmRMaXN0IiwiZ2V0Q2FyZHMiLCJjYXJkIiwicG9wdXBJbWciLCJvcGVuIiwic2V0TGlrZSIsImNhcmRFbGVtZW50IiwiY3JlYXRlQ2FyZCIsIl9oYXNPd25lckxpa2VkIiwiYWRkSXRlbSIsIm5ld0Zvcm0iLCJzdWJtaXR0ZXIiLCJpbm5lclRleHQiLCJjYXJkRGF0YSIsIl9nZXRJbnB1dFZhbHVlcyIsIm5ld0NhcmQiLCJwcmVwZW5kIiwic2V0VGltZW91dCIsImlzU2luZ2xlRm9ybSIsImVuYWJsZVZhbGlkYXRpb24iLCJ1c2VyIiwiZ2V0VXNlciIsInVzZXJEYXRhIiwidXNlckluZm8iLCJlZGl0UHJvZmlsZSIsInNldFByb2ZpbGUiLCJnZXRVc2VySW5mbyIsInVybCIsIl9nZXRJbnB1dFVybCIsInNldFByb2ZpbGVQaWMiLCJtYWluQ29udGFpbmVyIiwibmV3Rm9ybUVsZW1lbnQiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJyZW1vdmVMaWtlIiwiYWRkTGlrZSJdLCJzb3VyY2VSb290IjoiIn0=